// Code generated by MockGen. DO NOT EDIT.
// Source: internal/currency/application/query/currency.interface.go

// Package query is a generated GoMock package.
package query

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/angryronald/currency-service/internal/currency/application/model"
)

// MockCurrencyQueryInterface is a mock of CurrencyQueryInterface interface.
type MockCurrencyQueryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencyQueryInterfaceMockRecorder
}

// MockCurrencyQueryInterfaceMockRecorder is the mock recorder for MockCurrencyQueryInterface.
type MockCurrencyQueryInterfaceMockRecorder struct {
	mock *MockCurrencyQueryInterface
}

// NewMockCurrencyQueryInterface creates a new mock instance.
func NewMockCurrencyQueryInterface(ctrl *gomock.Controller) *MockCurrencyQueryInterface {
	mock := &MockCurrencyQueryInterface{ctrl: ctrl}
	mock.recorder = &MockCurrencyQueryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrencyQueryInterface) EXPECT() *MockCurrencyQueryInterfaceMockRecorder {
	return m.recorder
}

// GetByCode mocks base method.
func (m *MockCurrencyQueryInterface) GetByCode(ctx context.Context, currencyCode string) (*model.CurrencyApplicationModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByCode", ctx, currencyCode)
	ret0, _ := ret[0].(*model.CurrencyApplicationModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByCode indicates an expected call of GetByCode.
func (mr *MockCurrencyQueryInterfaceMockRecorder) GetByCode(ctx, currencyCode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByCode", reflect.TypeOf((*MockCurrencyQueryInterface)(nil).GetByCode), ctx, currencyCode)
}

// List mocks base method.
func (m *MockCurrencyQueryInterface) List(ctx context.Context) ([]*model.CurrencyApplicationModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].([]*model.CurrencyApplicationModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockCurrencyQueryInterfaceMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockCurrencyQueryInterface)(nil).List), ctx)
}
